'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
'
Namespace eis_0035
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="PPI_EVS_WSSoap", [Namespace]:="https://ppi.ha.org.hk")>  _
    Partial Public Class PPI_EVS_WS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private getPPIRSATokenSerialNoByHKIDDummyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPPIRSATokenSerialNoByHKIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getTSWPatientListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.GetTSWPatientList.My.MySettings.Default.GetTSWPatientList_eis_0035_PPI_EVS_WS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event getPPIRSATokenSerialNoByHKIDDummyCompleted As getPPIRSATokenSerialNoByHKIDDummyCompletedEventHandler
        
        '''<remarks/>
        Public Event getPPIRSATokenSerialNoByHKIDCompleted As getPPIRSATokenSerialNoByHKIDCompletedEventHandler
        
        '''<remarks/>
        Public Event getTSWPatientListCompleted As getTSWPatientListCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ppi.ha.org.hk/getPPIRSATokenSerialNoByHKIDDummy", RequestNamespace:="https://ppi.ha.org.hk", ResponseNamespace:="https://ppi.ha.org.hk", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPPIRSATokenSerialNoByHKIDDummy(ByVal hkid As String) As String
            Dim results() As Object = Me.Invoke("getPPIRSATokenSerialNoByHKIDDummy", New Object() {hkid})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPPIRSATokenSerialNoByHKIDDummyAsync(ByVal hkid As String)
            Me.getPPIRSATokenSerialNoByHKIDDummyAsync(hkid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPPIRSATokenSerialNoByHKIDDummyAsync(ByVal hkid As String, ByVal userState As Object)
            If (Me.getPPIRSATokenSerialNoByHKIDDummyOperationCompleted Is Nothing) Then
                Me.getPPIRSATokenSerialNoByHKIDDummyOperationCompleted = AddressOf Me.OngetPPIRSATokenSerialNoByHKIDDummyOperationCompleted
            End If
            Me.InvokeAsync("getPPIRSATokenSerialNoByHKIDDummy", New Object() {hkid}, Me.getPPIRSATokenSerialNoByHKIDDummyOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPPIRSATokenSerialNoByHKIDDummyOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPPIRSATokenSerialNoByHKIDDummyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPPIRSATokenSerialNoByHKIDDummyCompleted(Me, New getPPIRSATokenSerialNoByHKIDDummyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ppi.ha.org.hk/getPPIRSATokenSerialNoByHKID", RequestNamespace:="https://ppi.ha.org.hk", ResponseNamespace:="https://ppi.ha.org.hk", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPPIRSATokenSerialNoByHKID(ByVal strHKID As String, ByVal strPassCode As String) As String
            Dim results() As Object = Me.Invoke("getPPIRSATokenSerialNoByHKID", New Object() {strHKID, strPassCode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPPIRSATokenSerialNoByHKIDAsync(ByVal strHKID As String, ByVal strPassCode As String)
            Me.getPPIRSATokenSerialNoByHKIDAsync(strHKID, strPassCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPPIRSATokenSerialNoByHKIDAsync(ByVal strHKID As String, ByVal strPassCode As String, ByVal userState As Object)
            If (Me.getPPIRSATokenSerialNoByHKIDOperationCompleted Is Nothing) Then
                Me.getPPIRSATokenSerialNoByHKIDOperationCompleted = AddressOf Me.OngetPPIRSATokenSerialNoByHKIDOperationCompleted
            End If
            Me.InvokeAsync("getPPIRSATokenSerialNoByHKID", New Object() {strHKID, strPassCode}, Me.getPPIRSATokenSerialNoByHKIDOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPPIRSATokenSerialNoByHKIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPPIRSATokenSerialNoByHKIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPPIRSATokenSerialNoByHKIDCompleted(Me, New getPPIRSATokenSerialNoByHKIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ppi.ha.org.hk/getTSWPatientList", RequestNamespace:="https://ppi.ha.org.hk", ResponseNamespace:="https://ppi.ha.org.hk", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getTSWPatientList(ByVal strPassCode As String) As String
            Dim results() As Object = Me.Invoke("getTSWPatientList", New Object() {strPassCode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getTSWPatientListAsync(ByVal strPassCode As String)
            Me.getTSWPatientListAsync(strPassCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getTSWPatientListAsync(ByVal strPassCode As String, ByVal userState As Object)
            If (Me.getTSWPatientListOperationCompleted Is Nothing) Then
                Me.getTSWPatientListOperationCompleted = AddressOf Me.OngetTSWPatientListOperationCompleted
            End If
            Me.InvokeAsync("getTSWPatientList", New Object() {strPassCode}, Me.getTSWPatientListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetTSWPatientListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getTSWPatientListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getTSWPatientListCompleted(Me, New getTSWPatientListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub getPPIRSATokenSerialNoByHKIDDummyCompletedEventHandler(ByVal sender As Object, ByVal e As getPPIRSATokenSerialNoByHKIDDummyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPPIRSATokenSerialNoByHKIDDummyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub getPPIRSATokenSerialNoByHKIDCompletedEventHandler(ByVal sender As Object, ByVal e As getPPIRSATokenSerialNoByHKIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPPIRSATokenSerialNoByHKIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub getTSWPatientListCompletedEventHandler(ByVal sender As Object, ByVal e As getTSWPatientListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getTSWPatientListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
