'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=4.0.30319.33440.
'

'CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code"), _
 System.Web.Services.WebServiceBindingAttribute(Name:="ImmuEnquiryWebSPortBinding", [Namespace]:="http://biz.immu.immu_ws/")> _
Partial Public Class ImmuEnquiryWebS_EndPoint_EAIWSProxy
    'Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
    Inherits Microsoft.Web.Services3.WebServicesClientProtocol

    Private getVersionOperationCompleted As System.Threading.SendOrPostCallback

    Private getWsInfoOperationCompleted As System.Threading.SendOrPostCallback

    Private getEhsHealthCheckOperationCompleted As System.Threading.SendOrPostCallback

    Private getEhsVaccinationOperationCompleted As System.Threading.SendOrPostCallback

    Private getCmsVaccinationOperationCompleted As System.Threading.SendOrPostCallback

    '''<remarks/>
    Public Sub New()
        MyBase.New()
        Me.Url = "http://cms-corp-immu-sit:14041/cms-immu/immu-ehr/3_0_0/ImmuEnquiryWebS"
    End Sub

    '''<remarks/>
    Public Event getVersionCompleted As getVersionCompletedEventHandler

    '''<remarks/>
    Public Event getWsInfoCompleted As getWsInfoCompletedEventHandler

    '''<remarks/>
    Public Event getEhsHealthCheckCompleted As getEhsHealthCheckCompletedEventHandler

    '''<remarks/>
    Public Event getEhsVaccinationCompleted As getEhsVaccinationCompletedEventHandler

    '''<remarks/>
    Public Event getCmsVaccinationCompleted As getCmsVaccinationCompletedEventHandler

    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://biz.immu.immu_ws/", ResponseNamespace:="http://biz.immu.immu_ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal)> _
    Public Function getVersion() As <System.Xml.Serialization.XmlElementAttribute("return")> String
        Dim results() As Object = Me.Invoke("getVersion", New Object(-1) {})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BegingetVersion(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getVersion", New Object(-1) {}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndgetVersion(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub getVersionAsync()
        Me.getVersionAsync(Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub getVersionAsync(ByVal userState As Object)
        If (Me.getVersionOperationCompleted Is Nothing) Then
            Me.getVersionOperationCompleted = AddressOf Me.OngetVersionOperationCompleted
        End If
        Me.InvokeAsync("getVersion", New Object(-1) {}, Me.getVersionOperationCompleted, userState)
    End Sub

    Private Sub OngetVersionOperationCompleted(ByVal arg As Object)
        If (Not (Me.getVersionCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent getVersionCompleted(Me, New getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://biz.immu.immu_ws/", ResponseNamespace:="http://biz.immu.immu_ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal)> _
    Public Function getWsInfo() As <System.Xml.Serialization.XmlElementAttribute("return")> String
        Dim results() As Object = Me.Invoke("getWsInfo", New Object(-1) {})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BegingetWsInfo(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getWsInfo", New Object(-1) {}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndgetWsInfo(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub getWsInfoAsync()
        Me.getWsInfoAsync(Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub getWsInfoAsync(ByVal userState As Object)
        If (Me.getWsInfoOperationCompleted Is Nothing) Then
            Me.getWsInfoOperationCompleted = AddressOf Me.OngetWsInfoOperationCompleted
        End If
        Me.InvokeAsync("getWsInfo", New Object(-1) {}, Me.getWsInfoOperationCompleted, userState)
    End Sub

    Private Sub OngetWsInfoOperationCompleted(ByVal arg As Object)
        If (Not (Me.getWsInfoCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent getWsInfoCompleted(Me, New getWsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://biz.immu.immu_ws/", ResponseNamespace:="http://biz.immu.immu_ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal)> _
    Public Function getEhsHealthCheck() As <System.Xml.Serialization.XmlElementAttribute("return")> String
        Dim results() As Object = Me.Invoke("getEhsHealthCheck", New Object(-1) {})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BegingetEhsHealthCheck(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getEhsHealthCheck", New Object(-1) {}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndgetEhsHealthCheck(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub getEhsHealthCheckAsync()
        Me.getEhsHealthCheckAsync(Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub getEhsHealthCheckAsync(ByVal userState As Object)
        If (Me.getEhsHealthCheckOperationCompleted Is Nothing) Then
            Me.getEhsHealthCheckOperationCompleted = AddressOf Me.OngetEhsHealthCheckOperationCompleted
        End If
        Me.InvokeAsync("getEhsHealthCheck", New Object(-1) {}, Me.getEhsHealthCheckOperationCompleted, userState)
    End Sub

    Private Sub OngetEhsHealthCheckOperationCompleted(ByVal arg As Object)
        If (Not (Me.getEhsHealthCheckCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent getEhsHealthCheckCompleted(Me, New getEhsHealthCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://biz.immu.immu_ws/", ResponseNamespace:="http://biz.immu.immu_ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal)> _
    Public Function getEhsVaccination(ByVal inputParm As String, ByVal hashCode As String) As <System.Xml.Serialization.XmlElementAttribute("return")> String
        Dim results() As Object = Me.Invoke("getEhsVaccination", New Object() {inputParm, hashCode})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BegingetEhsVaccination(ByVal inputParm As String, ByVal hashCode As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getEhsVaccination", New Object() {inputParm, hashCode}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndgetEhsVaccination(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub getEhsVaccinationAsync(ByVal inputParm As String, ByVal hashCode As String)
        Me.getEhsVaccinationAsync(inputParm, hashCode, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub getEhsVaccinationAsync(ByVal inputParm As String, ByVal hashCode As String, ByVal userState As Object)
        If (Me.getEhsVaccinationOperationCompleted Is Nothing) Then
            Me.getEhsVaccinationOperationCompleted = AddressOf Me.OngetEhsVaccinationOperationCompleted
        End If
        Me.InvokeAsync("getEhsVaccination", New Object() {inputParm, hashCode}, Me.getEhsVaccinationOperationCompleted, userState)
    End Sub

    Private Sub OngetEhsVaccinationOperationCompleted(ByVal arg As Object)
        If (Not (Me.getEhsVaccinationCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent getEhsVaccinationCompleted(Me, New getEhsVaccinationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    <System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace:="http://biz.immu.immu_ws/", ResponseNamespace:="http://biz.immu.immu_ws/", Use:=System.Web.Services.Description.SoapBindingUse.Literal)> _
    Public Function getCmsVaccination(ByVal inputParm As String) As <System.Xml.Serialization.XmlElementAttribute("return")> String
        Dim results() As Object = Me.Invoke("getCmsVaccination", New Object() {inputParm})
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Function BegingetCmsVaccination(ByVal inputParm As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        Return Me.BeginInvoke("getCmsVaccination", New Object() {inputParm}, callback, asyncState)
    End Function

    '''<remarks/>
    Public Function EndgetCmsVaccination(ByVal asyncResult As System.IAsyncResult) As String
        Dim results() As Object = Me.EndInvoke(asyncResult)
        Return CType(results(0), String)
    End Function

    '''<remarks/>
    Public Overloads Sub getCmsVaccinationAsync(ByVal inputParm As String)
        Me.getCmsVaccinationAsync(inputParm, Nothing)
    End Sub

    '''<remarks/>
    Public Overloads Sub getCmsVaccinationAsync(ByVal inputParm As String, ByVal userState As Object)
        If (Me.getCmsVaccinationOperationCompleted Is Nothing) Then
            Me.getCmsVaccinationOperationCompleted = AddressOf Me.OngetCmsVaccinationOperationCompleted
        End If
        Me.InvokeAsync("getCmsVaccination", New Object() {inputParm}, Me.getCmsVaccinationOperationCompleted, userState)
    End Sub

    Private Sub OngetCmsVaccinationOperationCompleted(ByVal arg As Object)
        If (Not (Me.getCmsVaccinationCompletedEvent) Is Nothing) Then
            Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
            RaiseEvent getCmsVaccinationCompleted(Me, New getCmsVaccinationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
        End If
    End Sub

    '''<remarks/>
    Public Shadows Sub CancelAsync(ByVal userState As Object)
        MyBase.CancelAsync(userState)
    End Sub
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")> _
Public Delegate Sub getVersionCompletedEventHandler_CMS(ByVal sender As Object, ByVal e As getVersionCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class getVersionCompletedEventArgs_CMS
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")>  _
Public Delegate Sub getWsInfoCompletedEventHandler(ByVal sender As Object, ByVal e As getWsInfoCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class getWsInfoCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")>  _
Public Delegate Sub getEhsHealthCheckCompletedEventHandler(ByVal sender As Object, ByVal e As getEhsHealthCheckCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440"),  _
 System.Diagnostics.DebuggerStepThroughAttribute(),  _
 System.ComponentModel.DesignerCategoryAttribute("code")>  _
Partial Public Class getEhsHealthCheckCompletedEventArgs
    Inherits System.ComponentModel.AsyncCompletedEventArgs
    
    Private results() As Object
    
    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub
    
    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary
            Return CType(Me.results(0),String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")> _
Public Delegate Sub getEhsVaccinationCompletedEventHandler_CMS(ByVal sender As Object, ByVal e As getEhsVaccinationCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class getEhsVaccinationCompletedEventArgs_CMS
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), String)
        End Get
    End Property
End Class

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")> _
Public Delegate Sub getCmsVaccinationCompletedEventHandler_CMS(ByVal sender As Object, ByVal e As getCmsVaccinationCompletedEventArgs)

'''<remarks/>
<System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440"), _
 System.Diagnostics.DebuggerStepThroughAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code")> _
Partial Public Class getCmsVaccinationCompletedEventArgs_CMS
    Inherits System.ComponentModel.AsyncCompletedEventArgs

    Private results() As Object

    Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
        MyBase.New(exception, cancelled, userState)
        Me.results = results
    End Sub

    '''<remarks/>
    Public ReadOnly Property Result() As String
        Get
            Me.RaiseExceptionIfNecessary()
            Return CType(Me.results(0), String)
        End Get
    End Property
End Class
